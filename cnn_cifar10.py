# -*- coding: utf-8 -*-
"""cnn_cifar10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ODxuYndJhvMLU6gQlUQT2aT_Ec5PaCGY
"""

from keras.datasets import cifar10
from keras.utils import to_categorical
from keras import models,layers,optimizers
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=cifar10.load_data()
x_train=x_train.astype('float32')/255.
y_train=to_categorical(y_train)
x_val=x_train[:5000]
y_val=y_train[:5000]
x_train=x_train[5000:]
y_train=y_train[5000:]
x_test=x_test.astype('float32')/255.
y_test=to_categorical(y_test)
print(x_test.shape,y_test.shape,x_val.shape,y_val.shape,x_train.shape,y_train.shape)

model=models.Sequential()
model.add(layers.Conv2D(32,(3,3),activation='relu',input_shape=(32,32,3),padding='same'))
model.add(layers.Conv2D(32,(3,3),activation='relu',padding='same'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Dropout(0.3))
model.add(layers.Conv2D(64,(3,3),activation='relu',padding='same'))
model.add(layers.Conv2D(64,(3,3),activation='relu',padding='same'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Conv2D(128,(3,3),activation='relu',padding='same'))
model.add(layers.Conv2D(128,(3,3),activation='relu',padding='same'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Flatten())
model.add(layers.Dropout(0.4))
model.add(layers.Dense(512,activation='relu'))
model.add(layers.Dense(10,activation='softmax'))
model.compile(optimizer='Adam',loss='categorical_crossentropy',metrics=['accuracy'])
history=model.fit(x_train,y_train,batch_size=128,epochs=15,verbose=0,validation_data=(x_val,y_val))

plt.plot(history.history['accuracy'],label='train_accuracy')
plt.plot(history.history['val_accuracy'],'r',label='val_accuracy')
plt.xlabel('epoch')
plt.ylabel('accuracy')
plt.legend()
plt.grid()
plt.show()
model.summary()

model.evaluate(x_test,y_test)